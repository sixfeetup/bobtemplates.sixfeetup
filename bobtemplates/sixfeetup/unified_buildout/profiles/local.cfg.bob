[buildout]
extends =
    base.cfg
    ci_tests.cfg
    debug.cfg

# unzip eggs that are zip safe
unzip = true

{{% if pre_plone4 %}}
extensions += buildout.dumppickedversions
{{% else  %}}
show-picked-versions = true
{{% endif %}}

# mr.developer settings to always checkout all eggs and force them
# to update
auto-checkout = *
always-checkout = force

parts =
{{% if plone_version == '3.1' %}}
    plone
{{% endif %}}
{{% if pre_plone4 %}}
    zope2
{{% endif %}}
    ${buildout:base-parts}
    ${debugging:parts}
    tags
#    tags-update-vi
{{% if pre_plone4 %}}
#    tags-zope
{{% endif %}}
    omelette
    i18ndude
    checkversions
#   This should live in the base.cfg parts
#   in theory, but this works much better...
    plonesite

[tags]
recipe = z3c.recipe.tag:tags
eggs = ${instance1:eggs}

[tags-update]
recipe = plone.recipe.command
command = ${buildout:bin-directory}/tags ${:tag-options}
update-command = ${:command}

[tags-update-vi]
<= tags-update
tag-options = -v
{{% if pre_plone4 %}}

[tags-zope]
# Add this to the parts above if you want to be able to use ctags
# on the old non-eggified version of Zope2
recipe = plone.recipe.command
# the executable to use
ctags = exctags
# the location to the zope2 python code
zope2 = ${zope2:location}/lib/python
# NOTE: Currently this only generates vi compatible tags
command = which ${:ctags} > /dev/null && [ -d ${:zope2} ] && ${:ctags} -R -a -f tags ${:zope2} || print "WARNING: no ctags found"
update-command = ${:command}
{{% endif %}}

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

{{% if plone_version == '3.1' %}}
[plone]
# XXX pinning our local Plone to the 3.1.x series
recipe = plone.recipe.plone < 3.2-dev

{{% endif %}}
{{% if pre_plone4 %}}
[zope2]
# Allow i18ndude to install properly
skip-fake-eggs +=
    zope.interface

{{% endif %}}
[instance1]
http-address = {{{ development_port }}}
zeo-address = {{{ development_port + 2000 }}}
debug-mode = on
verbose-security = on
{{% if pre_plone52 %}}
event-log-level = debug
{{% else %}}
event-log-level = DEBUG
{{% endif %}}
eggs += ${debugging:eggs}
{{% if plone_version == '3.1' %}}
zcml += ${debugging:zcml}
{{% endif %}}

# possibly disable the plone translations since
# that slows things down in development mode...
#environment-vars +=
#    DISABLE_PTS True

[plonesite]
# install some debug products automagically
profiles +=
#    collective.workflowed:default
#    plone.app.gloworm:default
{{% if not pre_plone4 %}}
    plone.app.debugtoolbar:default
{{% endif %}}

[i18ndude]
recipe = zc.recipe.egg
eggs =
    i18ndude
    ${instance1:eggs}
{{% if pre_plone4 %}}
extra-paths = ${instance1:zope2-location}/lib/python
{{% endif %}}

# NOTE: You will need junction.exe in your path to use this on windows:
#       http://technet.microsoft.com/en-us/sysinternals/bb896768.aspx
[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}
ignore-develop = True
ignores = setuptools
{{% if pre_plone4 %}}
# get the entire zope stack into the omelette
packages = ${zope2:location}/lib/python zope2
{{% endif %}}
